map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen ${SERVER_PORT};
    proxy_http_version 1.1;
    proxy_ssl_server_name on;
    proxy_set_header Authorization "";
    set $chorus_lab_backend_template ${CHORUS_LAB_BACKEND_TEMPLATE};
    set $authenticated_user $http_x_ms_client_principal_name;
    if ($authenticated_user = '') {
        set $authenticated_user ${REMOTE_USER};
    }
    js_var $protected_uri $uri;
    if ($protected_uri) {
    }
    otel_span_attr authenticated_user $authenticated_user;
    auth_request /authorize;

    location / {
        root /usr/share/nginx/html;
        index index.html;
        autoindex on;
        expires epoch;
    }

    location /lab {
        resolver ${NGINX_LOCAL_RESOLVERS};
        js_set $aimahead_backend http.get_aimahead_backend;
        rewrite /lab/(.*) /$1 break;
        proxy_pass $aimahead_backend/$1$is_args$args;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_read_timeout 180s;
        proxy_send_timeout 180s;
    }

    location /webapi/ {
        proxy_pass ${CHORUS_WEBAPI_BACKEND};
    }

    location = /authorize {
        internal;
        js_content http.authorize;
    }

    location = /whoami {
        js_content http.whoami;
    }
}
