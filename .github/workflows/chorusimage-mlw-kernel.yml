name: chorus images firefox

on:
  push:
    branches:
      - main
    paths:
      - 'mlw-jupyter-kernel/**'
      - '.github/workflows/chorusimage-mlw-kernel.yml'

env:
  REGISTRY: ghcr.io
  ORG: chorus-ai

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - dockerfile: ./mlw-jupyter-kernel/python/Dockerfile
            image: ghcr.io/chorus-ai/chorus-mlw-kernel
            context: ./mlw-jupyter-kernel/python
            tag: python
          - dockerfile: ./mlw-jupyter-kernel/python/Dockerfile
            image: cr0aimaheadmlw.azurecr.io/chorus-mlw-kernel
            context: ./mlw-jupyter-kernel/python
            tag: python
          - dockerfile: ./mlw-jupyter-kernel/R/Dockerfile
            image: ghcr.io/chorus-ai/chorus-mlw-kernel:R-hades
            context: ./mlw-jupyter-kernel/R
            tag: R-hades
          - dockerfile: ./mlw-jupyter-kernel/R/Dockerfile
            image: cr0aimaheadmlw.azurecr.io/chorus-mlw-kernel
            context: ./mlw-jupyter-kernel/R
            tag: R-hades
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: b2ai-googleform-bot
          password: ${{ secrets.GH_TOKEN }}

      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: cr0aimaheadmlw.azurecr.io
          username: cr0aimaheadmlw
          password: ${{ secrets.ACR_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ matrix.image }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            ${{ matrix.tag }}
          labels: |
            ${{ steps.meta.outputs.labels }}
          platforms: |
            linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

